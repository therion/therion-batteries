name: Installer
on: push
jobs:
  Windows_installer:
    runs-on: windows-latest
    strategy:
      matrix:
        config:
          - { msystem: UCRT64, arch: ucrt-x86_64 }
    defaults:
      run:
        shell: msys2 {0}
    outputs:
      THID: ${{ steps.build.outputs.THID_out }}
      git_branch: ${{ steps.build.outputs.git_branch }}
    env:
      THDIR: d:/a/therion
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.config.msystem }}
          update: true
          install: make git python mingw-w64-${{ matrix.config.arch }}-freetype mingw-w64-${{ matrix.config.arch }}-cmake mingw-w64-${{ matrix.config.arch }}-proj mingw-w64-${{ matrix.config.arch }}-shapelib mingw-w64-${{ matrix.config.arch }}-vtk mingw-w64-${{ matrix.config.arch }}-wxWidgets3.2 mingw-w64-${{ matrix.config.arch }}-gcc mingw-w64-${{ matrix.config.arch }}-make mingw-w64-${{ matrix.config.arch }}-bwidget mingw-w64-${{ matrix.config.arch }}-fmt mingw-w64-${{ matrix.config.arch }}-catch
      - name: prevent git EOL conversion
        run: git config --global core.autocrlf input
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch tags (relevant for forks only)
        if: github.repository != 'therion/therion'
        run: git fetch https://github.com/therion/therion tag 'v*'
      - name: build and create the installation package
        id: build
        run: |
          reg add HKCU\\Software\\Therion //v InstallDir //t REG_SZ //d "${THDIR}/therion-batteries"
          mkdir -p $HOME/.therion
          echo -e "mpost-path ${THDIR}/therion-batteries/bin/windows/mpost.exe\npdftex-path ${THDIR}/therion-batteries/bin/windows/pdftex.exe\nidentify-path ${THDIR}/therion-batteries/bin/identify.exe\nconvert-path ${THDIR}/therion-batteries/bin/convert.exe\n" > $HOME/.therion/therion.ini
          wget -qO - https://github.com/therion/therion-batteries/archive/master.tar.gz | tar -xzf - && mv therion-batteries-master ../therion-batteries
          if ${{startsWith(github.ref, 'refs/tags/v')}}; then THID=${GITHUB_REF##*/}; else THID=$(git rev-parse --short HEAD); fi
          echo "THID_out=$THID" >> $GITHUB_OUTPUT
          BRANCH_FULL=$(git branch -r --contains ${{ github.ref }})
          BRANCH=${BRANCH_FULL##*/}
          echo "git_branch=$BRANCH" >> $GITHUB_OUTPUT
          mkdir ../therion.bin
          cd ../therion.bin
          cmake -G "MSYS Makefiles" -DCMAKE_CXX_FLAGS="-Werror" -DUSE_BUNDLED_SHAPELIB=ON ../therion
          cmake --build . -j 4
          cp -r ../therion-batteries/_proj/{proj-$(awk -F "=" '/version/{print $2}' innosetup.ini),proj-datumgrid}/ ../therion-batteries/lib/
          cmake --build . -t samples deploy -- -j 4
          cd ../therion-batteries
          InnoSetup/ISCC.exe therion.iss
          cd ../therion.bin
          mv therion-setup.exe therion-setup-$THID.exe
          mv thbook/thbook.pdf thbook-$THID.pdf
      - uses: actions/upload-artifact@v4
        with:
          name: therion-setup-msys2-${{ steps.build.outputs.THID_out }}
          path: |
            ${{ env.THDIR }}/therion.bin/therion-setup-${{ steps.build.outputs.THID_out }}.exe
            ${{ env.THDIR }}/therion.bin/thbook-${{ steps.build.outputs.THID_out }}.pdf
